LOG: Creating Main Window
LOG: Window gained focus.
LOG: initialize() Start
LOG: CreateVulkanInstance() Start
LOG: FillInstanceExtensions() Start
LOG: Instance Extensions Supported by the system:
    VK_KHR_device_group_creation
    VK_KHR_external_fence_capabilities
    VK_KHR_external_memory_capabilities
    VK_KHR_external_semaphore_capabilities
    VK_KHR_get_physical_device_properties2
    VK_KHR_get_surface_capabilities2
    VK_KHR_surface
    VK_KHR_surface_protected_capabilities
    VK_KHR_win32_surface
    VK_EXT_debug_report
    VK_EXT_debug_utils
    VK_EXT_surface_maintenance1
    VK_EXT_swapchain_colorspace
    VK_NV_external_memory_capabilities
    VK_KHR_portability_enumeration
    VK_LUNARG_direct_driver_loading
LOG: FillInstanceExtensions() Successful
LOG: TryAddDebugExt() Start
LOG: Found VK_EXT_debug_utils, enabling debug extension.
LOG: TryAddValidationLayer() Start
LOG: Available Instance Layers:
    VK_LAYER_NV_optimus (SpecVer 4210991, ImplVer 1)
    VK_LAYER_NV_gr2608 (SpecVer 4210991, ImplVer 1)
    VK_LAYER_OBS_HOOK (SpecVer 4206808, ImplVer 1)
    VK_LAYER_LUNARG_api_dump (SpecVer 4210992, ImplVer 2)
    VK_LAYER_LUNARG_gfxreconstruct (SpecVer 4210992, ImplVer 4194309)
    VK_LAYER_KHRONOS_synchronization2 (SpecVer 4210992, ImplVer 1)
    VK_LAYER_KHRONOS_validation (SpecVer 4210992, ImplVer 1)
    VK_LAYER_LUNARG_monitor (SpecVer 4210992, ImplVer 1)
    VK_LAYER_LUNARG_screenshot (SpecVer 4210992, ImplVer 1)
    VK_LAYER_KHRONOS_profiles (SpecVer 4210992, ImplVer 1)
    VK_LAYER_KHRONOS_shader_object (SpecVer 4210992, ImplVer 1)
    VK_LAYER_LUNARG_crash_diagnostic (SpecVer 4210992, ImplVer 1)
LOG: Found VK_LAYER_KHRONOS_validation -> enabling validation layer.
LOG: Debug Messenger Created.
LOG: CreateVulkanInstance() Successful
LOG: CreateSurface() Start
LOG: Surface creation successful.
LOG: PickPhysicalDevice() Start
LOG: There are 1 physical device(s) found.
    PhysicalDevice[0]: NVIDIA GeForce RTX 2070 (API 1.4.303)
        QueueFamily[0]: queueFlags=0xf, PresentSupport=1
LOG: -> Chosen Physical Device = NVIDIA GeForce RTX 2070, QueueFamily=0
LOG: PickPhysicalDevice() Successful
LOG: CreateDeviceQueue() Start
LOG: CheckDevExtensions() Start
LOG: Device Extensions found:
    VK_KHR_16bit_storage
    VK_KHR_8bit_storage
    VK_KHR_acceleration_structure
    VK_KHR_bind_memory2
    VK_KHR_buffer_device_address
    VK_KHR_calibrated_timestamps
    VK_KHR_compute_shader_derivatives
    VK_KHR_cooperative_matrix
    VK_KHR_copy_commands2
    VK_KHR_create_renderpass2
    VK_KHR_dedicated_allocation
    VK_KHR_deferred_host_operations
    VK_KHR_depth_stencil_resolve
    VK_KHR_descriptor_update_template
    VK_KHR_device_group
    VK_KHR_draw_indirect_count
    VK_KHR_driver_properties
    VK_KHR_dynamic_rendering
    VK_KHR_dynamic_rendering_local_read
    VK_KHR_external_fence
    VK_KHR_external_fence_win32
    VK_KHR_external_memory
    VK_KHR_external_memory_win32
    VK_KHR_external_semaphore
    VK_KHR_external_semaphore_win32
    VK_KHR_format_feature_flags2
    VK_KHR_fragment_shader_barycentric
    VK_KHR_fragment_shading_rate
    VK_KHR_get_memory_requirements2
    VK_KHR_global_priority
    VK_KHR_image_format_list
    VK_KHR_imageless_framebuffer
    VK_KHR_index_type_uint8
    VK_KHR_line_rasterization
    VK_KHR_load_store_op_none
    VK_KHR_maintenance1
    VK_KHR_maintenance2
    VK_KHR_maintenance3
    VK_KHR_maintenance4
    VK_KHR_maintenance5
    VK_KHR_maintenance6
    VK_KHR_maintenance7
    VK_KHR_map_memory2
    VK_KHR_multiview
    VK_KHR_pipeline_binary
    VK_KHR_pipeline_executable_properties
    VK_KHR_pipeline_library
    VK_KHR_present_id
    VK_KHR_present_wait
    VK_KHR_push_descriptor
    VK_KHR_ray_query
    VK_KHR_ray_tracing_maintenance1
    VK_KHR_ray_tracing_pipeline
    VK_KHR_ray_tracing_position_fetch
    VK_KHR_relaxed_block_layout
    VK_KHR_sampler_mirror_clamp_to_edge
    VK_KHR_sampler_ycbcr_conversion
    VK_KHR_separate_depth_stencil_layouts
    VK_KHR_shader_atomic_int64
    VK_KHR_shader_clock
    VK_KHR_shader_draw_parameters
    VK_KHR_shader_expect_assume
    VK_KHR_shader_float16_int8
    VK_KHR_shader_float_controls
    VK_KHR_shader_float_controls2
    VK_KHR_shader_integer_dot_product
    VK_KHR_shader_maximal_reconvergence
    VK_KHR_shader_non_semantic_info
    VK_KHR_shader_quad_control
    VK_KHR_shader_relaxed_extended_instruction
    VK_KHR_shader_subgroup_extended_types
    VK_KHR_shader_subgroup_rotate
    VK_KHR_shader_subgroup_uniform_control_flow
    VK_KHR_shader_terminate_invocation
    VK_KHR_spirv_1_4
    VK_KHR_storage_buffer_storage_class
    VK_KHR_swapchain
    VK_KHR_swapchain_mutable_format
    VK_KHR_synchronization2
    VK_KHR_timeline_semaphore
    VK_KHR_uniform_buffer_standard_layout
    VK_KHR_variable_pointers
    VK_KHR_vertex_attribute_divisor
    VK_KHR_video_decode_h264
    VK_KHR_video_decode_h265
    VK_KHR_video_decode_queue
    VK_KHR_video_encode_h264
    VK_KHR_video_encode_h265
    VK_KHR_video_encode_queue
    VK_KHR_video_maintenance1
    VK_KHR_video_queue
    VK_KHR_vulkan_memory_model
    VK_KHR_win32_keyed_mutex
    VK_KHR_workgroup_memory_explicit_layout
    VK_KHR_zero_initialize_workgroup_memory
    VK_EXT_4444_formats
    VK_EXT_attachment_feedback_loop_dynamic_state
    VK_EXT_attachment_feedback_loop_layout
    VK_EXT_blend_operation_advanced
    VK_EXT_border_color_swizzle
    VK_EXT_buffer_device_address
    VK_EXT_calibrated_timestamps
    VK_EXT_color_write_enable
    VK_EXT_conditional_rendering
    VK_EXT_conservative_rasterization
    VK_EXT_custom_border_color
    VK_EXT_depth_bias_control
    VK_EXT_depth_clamp_control
    VK_EXT_depth_clamp_zero_one
    VK_EXT_depth_clip_control
    VK_EXT_depth_clip_enable
    VK_EXT_depth_range_unrestricted
    VK_EXT_descriptor_buffer
    VK_EXT_descriptor_indexing
    VK_EXT_device_fault
    VK_EXT_device_generated_commands
    VK_EXT_discard_rectangles
    VK_EXT_dynamic_rendering_unused_attachments
    VK_EXT_extended_dynamic_state
    VK_EXT_extended_dynamic_state2
    VK_EXT_extended_dynamic_state3
    VK_EXT_external_memory_host
    VK_EXT_fragment_shader_interlock
    VK_EXT_full_screen_exclusive
    VK_EXT_global_priority
    VK_EXT_global_priority_query
    VK_EXT_graphics_pipeline_library
    VK_EXT_hdr_metadata
    VK_EXT_host_image_copy
    VK_EXT_host_query_reset
    VK_EXT_image_2d_view_of_3d
    VK_EXT_image_robustness
    VK_EXT_image_sliced_view_of_3d
    VK_EXT_image_view_min_lod
    VK_EXT_index_type_uint8
    VK_EXT_inline_uniform_block
    VK_EXT_legacy_vertex_attributes
    VK_EXT_line_rasterization
    VK_EXT_load_store_op_none
    VK_EXT_memory_budget
    VK_EXT_memory_priority
    VK_EXT_mesh_shader
    VK_EXT_multi_draw
    VK_EXT_mutable_descriptor_type
    VK_EXT_nested_command_buffer
    VK_EXT_non_seamless_cube_map
    VK_EXT_opacity_micromap
    VK_EXT_pageable_device_local_memory
    VK_EXT_pci_bus_info
    VK_EXT_pipeline_creation_cache_control
    VK_EXT_pipeline_creation_feedback
    VK_EXT_pipeline_library_group_handles
    VK_EXT_pipeline_robustness
    VK_EXT_post_depth_coverage
    VK_EXT_primitive_topology_list_restart
    VK_EXT_primitives_generated_query
    VK_EXT_private_data
    VK_EXT_provoking_vertex
    VK_EXT_queue_family_foreign
    VK_EXT_robustness2
    VK_EXT_sample_locations
    VK_EXT_sampler_filter_minmax
    VK_EXT_scalar_block_layout
    VK_EXT_separate_stencil_usage
    VK_EXT_shader_atomic_float
    VK_EXT_shader_demote_to_helper_invocation
    VK_EXT_shader_image_atomic_int64
    VK_EXT_shader_module_identifier
    VK_EXT_shader_object
    VK_EXT_shader_replicated_composites
    VK_EXT_shader_subgroup_ballot
    VK_EXT_shader_subgroup_vote
    VK_EXT_shader_viewport_index_layer
    VK_EXT_subgroup_size_control
    VK_EXT_swapchain_maintenance1
    VK_EXT_texel_buffer_alignment
    VK_EXT_tooling_info
    VK_EXT_transform_feedback
    VK_EXT_vertex_attribute_divisor
    VK_EXT_vertex_input_dynamic_state
    VK_EXT_ycbcr_2plane_444_formats
    VK_EXT_ycbcr_image_arrays
    VK_NV_clip_space_w_scaling
    VK_NV_cluster_acceleration_structure
    VK_NV_compute_shader_derivatives
    VK_NV_cooperative_matrix
    VK_NV_cooperative_vector
    VK_NV_copy_memory_indirect
    VK_NV_corner_sampled_image
    VK_NV_coverage_reduction_mode
    VK_NV_cuda_kernel_launch
    VK_NV_dedicated_allocation
    VK_NV_dedicated_allocation_image_aliasing
    VK_NV_descriptor_pool_overallocation
    VK_NV_device_diagnostic_checkpoints
    VK_NV_device_diagnostics_config
    VK_NV_device_generated_commands
    VK_NV_device_generated_commands_compute
    VK_NV_external_memory
    VK_NV_external_memory_win32
    VK_NV_fill_rectangle
    VK_NV_fragment_coverage_to_color
    VK_NV_fragment_shader_barycentric
    VK_NV_fragment_shading_rate_enums
    VK_NV_framebuffer_mixed_samples
    VK_NV_geometry_shader_passthrough
    VK_NV_inherited_viewport_scissor
    VK_NV_linear_color_attachment
    VK_NV_low_latency
    VK_NV_low_latency2
    VK_NV_memory_decompression
    VK_NV_mesh_shader
    VK_NV_partitioned_acceleration_structure
    VK_NV_present_metering
    VK_NV_raw_access_chains
    VK_NV_ray_tracing
    VK_NV_ray_tracing_invocation_reorder
    VK_NV_representative_fragment_test
    VK_NV_sample_mask_override_coverage
    VK_NV_scissor_exclusive
    VK_NV_shader_atomic_float16_vector
    VK_NV_shader_image_footprint
    VK_NV_shader_sm_builtins
    VK_NV_shader_subgroup_partitioned
    VK_NV_shading_rate_image
    VK_NV_viewport_array2
    VK_NV_viewport_swizzle
    VK_NV_win32_keyed_mutex
    VK_NVX_binary_import
    VK_NVX_image_view_handle
    VK_NVX_multiview_per_view_attributes
    VK_AMD_buffer_marker
    VK_GOOGLE_user_type
LOG: Found VK_KHR_dynamic_rendering extension; enabling.
LOG: CheckDevExtensions() Successful
LOG: LoadDynamicRenderingFunctions()
LOG: pfnCmdBeginRenderingKHR=00007FFF9B829210, pfnCmdEndRenderingKHR=00007FFF9B8294B0
LOG: CreateDeviceQueue() Successful. Queue handle: 00000251FCACDCD0
LOG: CreateSwapchain() Start
LOG: ChooseSwapFormat() Start
LOG: Available surface formats:
    Format[0]: format=44, colorSpace=0
    Format[1]: format=50, colorSpace=0
    Format[2]: format=37, colorSpace=0
    Format[3]: format=43, colorSpace=0
    Format[4]: format=64, colorSpace=0
LOG: Chosen format=44, colorSpace=0
LOG: ChoosePresentMode() Start
LOG: Available present modes:
    PresentMode[0] = 2
    PresentMode[1] = 3
    PresentMode[2] = 1
    PresentMode[3] = 0
LOG: Using MAILBOX present mode.
LOG: Final chosen present mode=1
LOG: SurfaceCapabilities => minImageCount=2, maxImageCount=8, currentExtent=(784,561)
LOG: Creating swapchain => desiredImageCount=3, finalExtent=(784,561)
LOG: vkCreateSwapchainKHR() Successful.
LOG: CreateImagesViews() Start
LOG: swapchainImageCount=3
LOG: Created ImageView[0] => CB3EE80000000007
LOG: Created ImageView[1] => EAD9370000000008
LOG: Created ImageView[2] => EE647E0000000009
LOG: CreateImagesViews() Successfully created 3 Image Views.
LOG: CreateCommandPoolBuffers() Start
LOG: Allocated CommandBuffer[0] => 00000251FF0FDF50
LOG: Allocated CommandBuffer[1] => 00000251FF102AE0
LOG: Allocated CommandBuffer[2] => 00000251FF108980
LOG: CreateCommandPoolBuffers() Successful
LOG: CreateSyncObjects() Start
LOG: Created sync objects for frame=0 => imageAvail=EC4BEC000000000B, renderFinish=E88693000000000C, fence=CAD092000000000D
LOG: Created sync objects for frame=1 => imageAvail=967DD1000000000E, renderFinish=E7E6D0000000000F, fence=D5B26F0000000010
LOG: CreateSyncObjects() Successful
LOG: Clear color set to (0.00, 0.00, 1.00, 1.00)
LOG: buildCommandBuffers() Start
LOG: CmdBuffer[0]: transition from UNDEFINED to COLOR_ATTACHMENT_OPTIMAL
LOG: CmdBuffer[0]: begin rendering (clear color=0.00,0.00,1.00,1.00)
LOG: CmdBuffer[0]: end rendering
LOG: CmdBuffer[0]: transition from COLOR_ATTACHMENT_OPTIMAL to PRESENT_SRC_KHR
LOG: CmdBuffer[1]: transition from UNDEFINED to COLOR_ATTACHMENT_OPTIMAL
LOG: CmdBuffer[1]: begin rendering (clear color=0.00,0.00,1.00,1.00)
LOG: CmdBuffer[1]: end rendering
LOG: CmdBuffer[1]: transition from COLOR_ATTACHMENT_OPTIMAL to PRESENT_SRC_KHR
LOG: CmdBuffer[2]: transition from UNDEFINED to COLOR_ATTACHMENT_OPTIMAL
LOG: CmdBuffer[2]: begin rendering (clear color=0.00,0.00,1.00,1.00)
LOG: CmdBuffer[2]: end rendering
LOG: CmdBuffer[2]: transition from COLOR_ATTACHMENT_OPTIMAL to PRESENT_SRC_KHR
LOG: buildCommandBuffers() Successful
LOG: initialize() Successful
LOG: vkAcquireNextImageKHR => result=0, imgIndex=0
LOG: Submitted CmdBuffer for imageIndex=0, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=1
LOG: Submitted CmdBuffer for imageIndex=1, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=2
LOG: Submitted CmdBuffer for imageIndex=2, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=0
LOG: Submitted CmdBuffer for imageIndex=0, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=1
LOG: Submitted CmdBuffer for imageIndex=1, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=2
LOG: Submitted CmdBuffer for imageIndex=2, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=0
LOG: Submitted CmdBuffer for imageIndex=0, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=1
LOG: Submitted CmdBuffer for imageIndex=1, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=2
LOG: Submitted CmdBuffer for imageIndex=2, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=0
LOG: Submitted CmdBuffer for imageIndex=0, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=1
LOG: Submitted CmdBuffer for imageIndex=1, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=2
LOG: Submitted CmdBuffer for imageIndex=2, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=0
LOG: Submitted CmdBuffer for imageIndex=0, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=1
LOG: Submitted CmdBuffer for imageIndex=1, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=2
LOG: Submitted CmdBuffer for imageIndex=2, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=0
LOG: Submitted CmdBuffer for imageIndex=0, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=1
LOG: Submitted CmdBuffer for imageIndex=1, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=2
LOG: Submitted CmdBuffer for imageIndex=2, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=0
LOG: Submitted CmdBuffer for imageIndex=0, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=1
LOG: Submitted CmdBuffer for imageIndex=1, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=2
LOG: Submitted CmdBuffer for imageIndex=2, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=0
LOG: Submitted CmdBuffer for imageIndex=0, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=1
LOG: Submitted CmdBuffer for imageIndex=1, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=2
LOG: Submitted CmdBuffer for imageIndex=2, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=0
LOG: Submitted CmdBuffer for imageIndex=0, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=1
LOG: Submitted CmdBuffer for imageIndex=1, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=2
LOG: Submitted CmdBuffer for imageIndex=2, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=0
LOG: Submitted CmdBuffer for imageIndex=0, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=1
LOG: Submitted CmdBuffer for imageIndex=1, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=2
LOG: Submitted CmdBuffer for imageIndex=2, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=0
LOG: Submitted CmdBuffer for imageIndex=0, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=1
LOG: Submitted CmdBuffer for imageIndex=1, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=2
LOG: Submitted CmdBuffer for imageIndex=2, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=0
LOG: Submitted CmdBuffer for imageIndex=0, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=1
LOG: Submitted CmdBuffer for imageIndex=1, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=2
LOG: Submitted CmdBuffer for imageIndex=2, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=0
LOG: Submitted CmdBuffer for imageIndex=0, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=1
LOG: Submitted CmdBuffer for imageIndex=1, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=2
LOG: Submitted CmdBuffer for imageIndex=2, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=0
LOG: Submitted CmdBuffer for imageIndex=0, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=1
LOG: Submitted CmdBuffer for imageIndex=1, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=2
LOG: Submitted CmdBuffer for imageIndex=2, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=0
LOG: Submitted CmdBuffer for imageIndex=0, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=1
LOG: Submitted CmdBuffer for imageIndex=1, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=2
LOG: Submitted CmdBuffer for imageIndex=2, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=0
LOG: Submitted CmdBuffer for imageIndex=0, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=1
LOG: Submitted CmdBuffer for imageIndex=1, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=2
LOG: Submitted CmdBuffer for imageIndex=2, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=0
LOG: Submitted CmdBuffer for imageIndex=0, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=1
LOG: Submitted CmdBuffer for imageIndex=1, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=2
LOG: Submitted CmdBuffer for imageIndex=2, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=0
LOG: Submitted CmdBuffer for imageIndex=0, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=1
LOG: Submitted CmdBuffer for imageIndex=1, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=2
LOG: Submitted CmdBuffer for imageIndex=2, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=0
LOG: Submitted CmdBuffer for imageIndex=0, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=1
LOG: Submitted CmdBuffer for imageIndex=1, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=2
LOG: Submitted CmdBuffer for imageIndex=2, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=0
LOG: Submitted CmdBuffer for imageIndex=0, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=1
LOG: Submitted CmdBuffer for imageIndex=1, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=2
LOG: Submitted CmdBuffer for imageIndex=2, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=0
LOG: Submitted CmdBuffer for imageIndex=0, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=1
LOG: Submitted CmdBuffer for imageIndex=1, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=2
LOG: Submitted CmdBuffer for imageIndex=2, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=0
LOG: Submitted CmdBuffer for imageIndex=0, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=1
LOG: Submitted CmdBuffer for imageIndex=1, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=2
LOG: Submitted CmdBuffer for imageIndex=2, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=0
LOG: Submitted CmdBuffer for imageIndex=0, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=1
LOG: Submitted CmdBuffer for imageIndex=1, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=2
LOG: Submitted CmdBuffer for imageIndex=2, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=0
LOG: Submitted CmdBuffer for imageIndex=0, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=1
LOG: Submitted CmdBuffer for imageIndex=1, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=2
LOG: Submitted CmdBuffer for imageIndex=2, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=0
LOG: Submitted CmdBuffer for imageIndex=0, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=1
LOG: Submitted CmdBuffer for imageIndex=1, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=2
LOG: Submitted CmdBuffer for imageIndex=2, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=0
LOG: Submitted CmdBuffer for imageIndex=0, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=1
LOG: Submitted CmdBuffer for imageIndex=1, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=2
LOG: Submitted CmdBuffer for imageIndex=2, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=0
LOG: Submitted CmdBuffer for imageIndex=0, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=1
LOG: Submitted CmdBuffer for imageIndex=1, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=2
LOG: Submitted CmdBuffer for imageIndex=2, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=0
LOG: Submitted CmdBuffer for imageIndex=0, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=1
LOG: Submitted CmdBuffer for imageIndex=1, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=2
LOG: Submitted CmdBuffer for imageIndex=2, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=0
LOG: Submitted CmdBuffer for imageIndex=0, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=1
LOG: Submitted CmdBuffer for imageIndex=1, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=2
LOG: Submitted CmdBuffer for imageIndex=2, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=0
LOG: Submitted CmdBuffer for imageIndex=0, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=1
LOG: Submitted CmdBuffer for imageIndex=1, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=2
LOG: Submitted CmdBuffer for imageIndex=2, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=0
LOG: Submitted CmdBuffer for imageIndex=0, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=1
LOG: Submitted CmdBuffer for imageIndex=1, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=2
LOG: Submitted CmdBuffer for imageIndex=2, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=0
LOG: Submitted CmdBuffer for imageIndex=0, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=1
LOG: Submitted CmdBuffer for imageIndex=1, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=2
LOG: Submitted CmdBuffer for imageIndex=2, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=0
LOG: Submitted CmdBuffer for imageIndex=0, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=1
LOG: Submitted CmdBuffer for imageIndex=1, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=2
LOG: Submitted CmdBuffer for imageIndex=2, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=0
LOG: Submitted CmdBuffer for imageIndex=0, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=1
LOG: Submitted CmdBuffer for imageIndex=1, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=2
LOG: Submitted CmdBuffer for imageIndex=2, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=0
LOG: Submitted CmdBuffer for imageIndex=0, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=1
LOG: Submitted CmdBuffer for imageIndex=1, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=2
LOG: Submitted CmdBuffer for imageIndex=2, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=0
LOG: Submitted CmdBuffer for imageIndex=0, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=1
LOG: Submitted CmdBuffer for imageIndex=1, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=2
LOG: Submitted CmdBuffer for imageIndex=2, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=0
LOG: Submitted CmdBuffer for imageIndex=0, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=1
LOG: Submitted CmdBuffer for imageIndex=1, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=2
LOG: Submitted CmdBuffer for imageIndex=2, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=0
LOG: Submitted CmdBuffer for imageIndex=0, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: Toggle fullscreen.
LOG: WM_SIZE -> resize(1920, 1080)
LOG: resize(1920, 1080)
LOG: recreateSwapchain() Start
LOG: cleanupSwapchain() Start
LOG: Freed CommandBuffer[0]
LOG: Freed CommandBuffer[1]
LOG: Freed CommandBuffer[2]
LOG: Destroyed Command Pool
LOG: Destroyed ImageView[0]
LOG: Destroyed ImageView[1]
LOG: Destroyed ImageView[2]
LOG: Destroyed Swapchain
LOG: cleanupSwapchain() End
LOG: CreateSwapchain() Start
LOG: ChooseSwapFormat() Start
LOG: Available surface formats:
    Format[0]: format=44, colorSpace=0
    Format[1]: format=50, colorSpace=0
    Format[2]: format=37, colorSpace=0
    Format[3]: format=43, colorSpace=0
    Format[4]: format=64, colorSpace=0
LOG: Chosen format=44, colorSpace=0
LOG: ChoosePresentMode() Start
LOG: Available present modes:
    PresentMode[0] = 2
    PresentMode[1] = 3
    PresentMode[2] = 1
    PresentMode[3] = 0
LOG: Using MAILBOX present mode.
LOG: Final chosen present mode=1
LOG: SurfaceCapabilities => minImageCount=2, maxImageCount=8, currentExtent=(1920,1080)
LOG: Creating swapchain => desiredImageCount=3, finalExtent=(1920,1080)
LOG: vkCreateSwapchainKHR() Successful.
LOG: CreateImagesViews() Start
LOG: swapchainImageCount=3
LOG: Created ImageView[0] => DD3A8A0000000015
LOG: Created ImageView[1] => D897D90000000016
LOG: Created ImageView[2] => 84C0580000000017
LOG: CreateImagesViews() Successfully created 3 Image Views.
LOG: CreateCommandPoolBuffers() Start
LOG: Allocated CommandBuffer[0] => 00000251FF15F2D0
LOG: Allocated CommandBuffer[1] => 00000251FF416E00
LOG: Allocated CommandBuffer[2] => 00000251FF4B20C0
LOG: CreateCommandPoolBuffers() Successful
LOG: buildCommandBuffers() Start
LOG: CmdBuffer[0]: transition from UNDEFINED to COLOR_ATTACHMENT_OPTIMAL
LOG: CmdBuffer[0]: begin rendering (clear color=0.00,0.00,1.00,1.00)
LOG: CmdBuffer[0]: end rendering
LOG: CmdBuffer[0]: transition from COLOR_ATTACHMENT_OPTIMAL to PRESENT_SRC_KHR
LOG: CmdBuffer[1]: transition from UNDEFINED to COLOR_ATTACHMENT_OPTIMAL
LOG: CmdBuffer[1]: begin rendering (clear color=0.00,0.00,1.00,1.00)
LOG: CmdBuffer[1]: end rendering
LOG: CmdBuffer[1]: transition from COLOR_ATTACHMENT_OPTIMAL to PRESENT_SRC_KHR
LOG: CmdBuffer[2]: transition from UNDEFINED to COLOR_ATTACHMENT_OPTIMAL
LOG: CmdBuffer[2]: begin rendering (clear color=0.00,0.00,1.00,1.00)
LOG: CmdBuffer[2]: end rendering
LOG: CmdBuffer[2]: transition from COLOR_ATTACHMENT_OPTIMAL to PRESENT_SRC_KHR
LOG: buildCommandBuffers() Successful
LOG: recreateSwapchain() End with result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=0
LOG: Submitted CmdBuffer for imageIndex=0, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=1
LOG: Submitted CmdBuffer for imageIndex=1, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=2
LOG: Submitted CmdBuffer for imageIndex=2, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=0
LOG: Submitted CmdBuffer for imageIndex=0, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=1
LOG: Submitted CmdBuffer for imageIndex=1, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=2
LOG: Submitted CmdBuffer for imageIndex=2, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=0
LOG: Submitted CmdBuffer for imageIndex=0, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=1
LOG: Submitted CmdBuffer for imageIndex=1, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=2
LOG: Submitted CmdBuffer for imageIndex=2, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=0
LOG: Submitted CmdBuffer for imageIndex=0, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=1
LOG: Submitted CmdBuffer for imageIndex=1, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=2
LOG: Submitted CmdBuffer for imageIndex=2, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=0
LOG: Submitted CmdBuffer for imageIndex=0, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=1
LOG: Submitted CmdBuffer for imageIndex=1, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=2
LOG: Submitted CmdBuffer for imageIndex=2, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=0
LOG: Submitted CmdBuffer for imageIndex=0, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=1
LOG: Submitted CmdBuffer for imageIndex=1, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=2
LOG: Submitted CmdBuffer for imageIndex=2, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=0
LOG: Submitted CmdBuffer for imageIndex=0, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=1
LOG: Submitted CmdBuffer for imageIndex=1, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=2
LOG: Submitted CmdBuffer for imageIndex=2, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=0
LOG: Submitted CmdBuffer for imageIndex=0, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=1
LOG: Submitted CmdBuffer for imageIndex=1, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=2
LOG: Submitted CmdBuffer for imageIndex=2, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=0
LOG: Submitted CmdBuffer for imageIndex=0, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=1
LOG: Submitted CmdBuffer for imageIndex=1, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=2
LOG: Submitted CmdBuffer for imageIndex=2, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=0
LOG: Submitted CmdBuffer for imageIndex=0, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=1
LOG: Submitted CmdBuffer for imageIndex=1, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=2
LOG: Submitted CmdBuffer for imageIndex=2, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=0
LOG: Submitted CmdBuffer for imageIndex=0, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=1
LOG: Submitted CmdBuffer for imageIndex=1, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=2
LOG: Submitted CmdBuffer for imageIndex=2, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=0
LOG: Submitted CmdBuffer for imageIndex=0, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=1
LOG: Submitted CmdBuffer for imageIndex=1, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=2
LOG: Submitted CmdBuffer for imageIndex=2, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=0
LOG: Submitted CmdBuffer for imageIndex=0, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=1
LOG: Submitted CmdBuffer for imageIndex=1, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=2
LOG: Submitted CmdBuffer for imageIndex=2, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=0
LOG: Submitted CmdBuffer for imageIndex=0, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=1
LOG: Submitted CmdBuffer for imageIndex=1, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=2
LOG: Submitted CmdBuffer for imageIndex=2, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=0
LOG: Submitted CmdBuffer for imageIndex=0, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: Toggle fullscreen.
LOG: WM_SIZE -> resize(800, 600)
LOG: resize(800, 600)
LOG: recreateSwapchain() Start
LOG: cleanupSwapchain() Start
LOG: Freed CommandBuffer[0]
LOG: Freed CommandBuffer[1]
LOG: Freed CommandBuffer[2]
LOG: Destroyed Command Pool
LOG: Destroyed ImageView[0]
LOG: Destroyed ImageView[1]
LOG: Destroyed ImageView[2]
LOG: Destroyed Swapchain
LOG: cleanupSwapchain() End
LOG: CreateSwapchain() Start
LOG: ChooseSwapFormat() Start
LOG: Available surface formats:
    Format[0]: format=44, colorSpace=0
    Format[1]: format=50, colorSpace=0
    Format[2]: format=37, colorSpace=0
    Format[3]: format=43, colorSpace=0
    Format[4]: format=64, colorSpace=0
LOG: Chosen format=44, colorSpace=0
LOG: ChoosePresentMode() Start
LOG: Available present modes:
    PresentMode[0] = 2
    PresentMode[1] = 3
    PresentMode[2] = 1
    PresentMode[3] = 0
LOG: Using MAILBOX present mode.
LOG: Final chosen present mode=1
LOG: SurfaceCapabilities => minImageCount=2, maxImageCount=8, currentExtent=(800,600)
LOG: Creating swapchain => desiredImageCount=3, finalExtent=(800,600)
LOG: vkCreateSwapchainKHR() Successful.
LOG: CreateImagesViews() Start
LOG: swapchainImageCount=3
LOG: Created ImageView[0] => 908683000000001D
LOG: Created ImageView[1] => CFCDA0000000001E
LOG: Created ImageView[2] => 2E2941000000001F
LOG: CreateImagesViews() Successfully created 3 Image Views.
LOG: CreateCommandPoolBuffers() Start
LOG: Allocated CommandBuffer[0] => 00000251FF51CCF0
LOG: Allocated CommandBuffer[1] => 00000251FF0F3070
LOG: Allocated CommandBuffer[2] => 00000251FF4A91E0
LOG: CreateCommandPoolBuffers() Successful
LOG: buildCommandBuffers() Start
LOG: CmdBuffer[0]: transition from UNDEFINED to COLOR_ATTACHMENT_OPTIMAL
LOG: CmdBuffer[0]: begin rendering (clear color=0.00,0.00,1.00,1.00)
LOG: CmdBuffer[0]: end rendering
LOG: CmdBuffer[0]: transition from COLOR_ATTACHMENT_OPTIMAL to PRESENT_SRC_KHR
LOG: CmdBuffer[1]: transition from UNDEFINED to COLOR_ATTACHMENT_OPTIMAL
LOG: CmdBuffer[1]: begin rendering (clear color=0.00,0.00,1.00,1.00)
LOG: CmdBuffer[1]: end rendering
LOG: CmdBuffer[1]: transition from COLOR_ATTACHMENT_OPTIMAL to PRESENT_SRC_KHR
LOG: CmdBuffer[2]: transition from UNDEFINED to COLOR_ATTACHMENT_OPTIMAL
LOG: CmdBuffer[2]: begin rendering (clear color=0.00,0.00,1.00,1.00)
LOG: CmdBuffer[2]: end rendering
LOG: CmdBuffer[2]: transition from COLOR_ATTACHMENT_OPTIMAL to PRESENT_SRC_KHR
LOG: buildCommandBuffers() Successful
LOG: recreateSwapchain() End with result=0
LOG: WM_SIZE -> resize(784, 561)
LOG: resize(784, 561)
LOG: recreateSwapchain() Start
LOG: cleanupSwapchain() Start
LOG: Freed CommandBuffer[0]
LOG: Freed CommandBuffer[1]
LOG: Freed CommandBuffer[2]
LOG: Destroyed Command Pool
LOG: Destroyed ImageView[0]
LOG: Destroyed ImageView[1]
LOG: Destroyed ImageView[2]
LOG: Destroyed Swapchain
LOG: cleanupSwapchain() End
LOG: CreateSwapchain() Start
LOG: ChooseSwapFormat() Start
LOG: Available surface formats:
    Format[0]: format=44, colorSpace=0
    Format[1]: format=50, colorSpace=0
    Format[2]: format=37, colorSpace=0
    Format[3]: format=43, colorSpace=0
    Format[4]: format=64, colorSpace=0
LOG: Chosen format=44, colorSpace=0
LOG: ChoosePresentMode() Start
LOG: Available present modes:
    PresentMode[0] = 2
    PresentMode[1] = 3
    PresentMode[2] = 1
    PresentMode[3] = 0
LOG: Using MAILBOX present mode.
LOG: Final chosen present mode=1
LOG: SurfaceCapabilities => minImageCount=2, maxImageCount=8, currentExtent=(784,561)
LOG: Creating swapchain => desiredImageCount=3, finalExtent=(784,561)
LOG: vkCreateSwapchainKHR() Successful.
LOG: CreateImagesViews() Start
LOG: swapchainImageCount=3
LOG: Created ImageView[0] => 3A6CBB0000000025
LOG: Created ImageView[1] => A2EB680000000026
LOG: Created ImageView[2] => B097C90000000027
LOG: CreateImagesViews() Successfully created 3 Image Views.
LOG: CreateCommandPoolBuffers() Start
LOG: Allocated CommandBuffer[0] => 00000251FF51CCF0
LOG: Allocated CommandBuffer[1] => 00000251FF0F3070
LOG: Allocated CommandBuffer[2] => 00000251FF4A91E0
LOG: CreateCommandPoolBuffers() Successful
LOG: buildCommandBuffers() Start
LOG: CmdBuffer[0]: transition from UNDEFINED to COLOR_ATTACHMENT_OPTIMAL
LOG: CmdBuffer[0]: begin rendering (clear color=0.00,0.00,1.00,1.00)
LOG: CmdBuffer[0]: end rendering
LOG: CmdBuffer[0]: transition from COLOR_ATTACHMENT_OPTIMAL to PRESENT_SRC_KHR
LOG: CmdBuffer[1]: transition from UNDEFINED to COLOR_ATTACHMENT_OPTIMAL
LOG: CmdBuffer[1]: begin rendering (clear color=0.00,0.00,1.00,1.00)
LOG: CmdBuffer[1]: end rendering
LOG: CmdBuffer[1]: transition from COLOR_ATTACHMENT_OPTIMAL to PRESENT_SRC_KHR
LOG: CmdBuffer[2]: transition from UNDEFINED to COLOR_ATTACHMENT_OPTIMAL
LOG: CmdBuffer[2]: begin rendering (clear color=0.00,0.00,1.00,1.00)
LOG: CmdBuffer[2]: end rendering
LOG: CmdBuffer[2]: transition from COLOR_ATTACHMENT_OPTIMAL to PRESENT_SRC_KHR
LOG: buildCommandBuffers() Successful
LOG: recreateSwapchain() End with result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=0
LOG: Submitted CmdBuffer for imageIndex=0, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=1
LOG: Submitted CmdBuffer for imageIndex=1, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=2
LOG: Submitted CmdBuffer for imageIndex=2, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=0
LOG: Submitted CmdBuffer for imageIndex=0, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=1
LOG: Submitted CmdBuffer for imageIndex=1, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=2
LOG: Submitted CmdBuffer for imageIndex=2, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=0
LOG: Submitted CmdBuffer for imageIndex=0, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=1
LOG: Submitted CmdBuffer for imageIndex=1, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=2
LOG: Submitted CmdBuffer for imageIndex=2, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=0
LOG: Submitted CmdBuffer for imageIndex=0, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=1
LOG: Submitted CmdBuffer for imageIndex=1, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=2
LOG: Submitted CmdBuffer for imageIndex=2, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=0
LOG: Submitted CmdBuffer for imageIndex=0, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=1
LOG: Submitted CmdBuffer for imageIndex=1, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=2
LOG: Submitted CmdBuffer for imageIndex=2, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=0
LOG: Submitted CmdBuffer for imageIndex=0, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=1
LOG: Submitted CmdBuffer for imageIndex=1, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=2
LOG: Submitted CmdBuffer for imageIndex=2, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=0
LOG: Submitted CmdBuffer for imageIndex=0, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=1
LOG: Submitted CmdBuffer for imageIndex=1, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=2
LOG: Submitted CmdBuffer for imageIndex=2, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=0
LOG: Submitted CmdBuffer for imageIndex=0, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=1
LOG: Submitted CmdBuffer for imageIndex=1, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=2
LOG: Submitted CmdBuffer for imageIndex=2, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=0
LOG: Submitted CmdBuffer for imageIndex=0, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=1
LOG: Submitted CmdBuffer for imageIndex=1, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=2
LOG: Submitted CmdBuffer for imageIndex=2, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=0
LOG: Submitted CmdBuffer for imageIndex=0, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=1
LOG: Submitted CmdBuffer for imageIndex=1, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=2
LOG: Submitted CmdBuffer for imageIndex=2, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=0
LOG: Submitted CmdBuffer for imageIndex=0, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=1
LOG: Submitted CmdBuffer for imageIndex=1, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=2
LOG: Submitted CmdBuffer for imageIndex=2, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=0
LOG: Submitted CmdBuffer for imageIndex=0, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=1
LOG: Submitted CmdBuffer for imageIndex=1, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=2
LOG: Submitted CmdBuffer for imageIndex=2, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=0
LOG: Submitted CmdBuffer for imageIndex=0, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=1
LOG: Submitted CmdBuffer for imageIndex=1, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=2
LOG: Submitted CmdBuffer for imageIndex=2, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=0
LOG: Submitted CmdBuffer for imageIndex=0, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=1
LOG: Submitted CmdBuffer for imageIndex=1, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=2
LOG: Submitted CmdBuffer for imageIndex=2, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=0
LOG: Submitted CmdBuffer for imageIndex=0, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=1
LOG: Submitted CmdBuffer for imageIndex=1, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=2
LOG: Submitted CmdBuffer for imageIndex=2, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=0
LOG: Submitted CmdBuffer for imageIndex=0, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=1
LOG: Submitted CmdBuffer for imageIndex=1, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=2
LOG: Submitted CmdBuffer for imageIndex=2, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=0
LOG: Submitted CmdBuffer for imageIndex=0, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=1
LOG: Submitted CmdBuffer for imageIndex=1, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=2
LOG: Submitted CmdBuffer for imageIndex=2, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=0
LOG: Submitted CmdBuffer for imageIndex=0, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=1
LOG: Submitted CmdBuffer for imageIndex=1, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=2
LOG: Submitted CmdBuffer for imageIndex=2, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=0
LOG: Submitted CmdBuffer for imageIndex=0, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=1
LOG: Submitted CmdBuffer for imageIndex=1, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=2
LOG: Submitted CmdBuffer for imageIndex=2, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=0
LOG: Submitted CmdBuffer for imageIndex=0, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=1
LOG: Submitted CmdBuffer for imageIndex=1, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=2
LOG: Submitted CmdBuffer for imageIndex=2, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=0
LOG: Submitted CmdBuffer for imageIndex=0, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=1
LOG: Submitted CmdBuffer for imageIndex=1, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=2
LOG: Submitted CmdBuffer for imageIndex=2, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=0
LOG: Submitted CmdBuffer for imageIndex=0, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=1
LOG: Submitted CmdBuffer for imageIndex=1, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=2
LOG: Submitted CmdBuffer for imageIndex=2, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=0
LOG: Submitted CmdBuffer for imageIndex=0, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=1
LOG: Submitted CmdBuffer for imageIndex=1, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=2
LOG: Submitted CmdBuffer for imageIndex=2, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=0
LOG: Submitted CmdBuffer for imageIndex=0, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=1
LOG: Submitted CmdBuffer for imageIndex=1, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=2
LOG: Submitted CmdBuffer for imageIndex=2, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=0
LOG: Submitted CmdBuffer for imageIndex=0, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=1
LOG: Submitted CmdBuffer for imageIndex=1, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=2
LOG: Submitted CmdBuffer for imageIndex=2, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=0
LOG: Submitted CmdBuffer for imageIndex=0, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=1
LOG: Submitted CmdBuffer for imageIndex=1, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=2
LOG: Submitted CmdBuffer for imageIndex=2, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=0
LOG: Submitted CmdBuffer for imageIndex=0, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=1
LOG: Submitted CmdBuffer for imageIndex=1, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=2
LOG: Submitted CmdBuffer for imageIndex=2, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=0
LOG: Submitted CmdBuffer for imageIndex=0, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=1
LOG: Submitted CmdBuffer for imageIndex=1, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=2
LOG: Submitted CmdBuffer for imageIndex=2, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=0
LOG: Submitted CmdBuffer for imageIndex=0, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=1
LOG: Submitted CmdBuffer for imageIndex=1, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=2
LOG: Submitted CmdBuffer for imageIndex=2, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=0
LOG: Submitted CmdBuffer for imageIndex=0, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=1
LOG: Submitted CmdBuffer for imageIndex=1, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=2
LOG: Submitted CmdBuffer for imageIndex=2, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=0
LOG: Submitted CmdBuffer for imageIndex=0, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=1
LOG: Submitted CmdBuffer for imageIndex=1, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=2
LOG: Submitted CmdBuffer for imageIndex=2, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=0
LOG: Submitted CmdBuffer for imageIndex=0, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=1
LOG: Submitted CmdBuffer for imageIndex=1, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=2
LOG: Submitted CmdBuffer for imageIndex=2, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=0
LOG: Submitted CmdBuffer for imageIndex=0, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=1
LOG: Submitted CmdBuffer for imageIndex=1, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=2
LOG: Submitted CmdBuffer for imageIndex=2, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=0
LOG: Submitted CmdBuffer for imageIndex=0, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=1
LOG: Submitted CmdBuffer for imageIndex=1, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=2
LOG: Submitted CmdBuffer for imageIndex=2, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=0
LOG: Submitted CmdBuffer for imageIndex=0, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=1
LOG: Submitted CmdBuffer for imageIndex=1, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=2
LOG: Submitted CmdBuffer for imageIndex=2, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=0
LOG: Submitted CmdBuffer for imageIndex=0, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=1
LOG: Submitted CmdBuffer for imageIndex=1, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=2
LOG: Submitted CmdBuffer for imageIndex=2, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=0
LOG: Submitted CmdBuffer for imageIndex=0, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=1
LOG: Submitted CmdBuffer for imageIndex=1, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=2
LOG: Submitted CmdBuffer for imageIndex=2, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=0
LOG: Submitted CmdBuffer for imageIndex=0, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=1
LOG: Submitted CmdBuffer for imageIndex=1, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=2
LOG: Submitted CmdBuffer for imageIndex=2, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=0
LOG: Submitted CmdBuffer for imageIndex=0, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=1
LOG: Submitted CmdBuffer for imageIndex=1, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=2
LOG: Submitted CmdBuffer for imageIndex=2, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=0
LOG: Submitted CmdBuffer for imageIndex=0, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=1
LOG: Submitted CmdBuffer for imageIndex=1, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=2
LOG: Submitted CmdBuffer for imageIndex=2, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=0
LOG: Submitted CmdBuffer for imageIndex=0, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=1
LOG: Submitted CmdBuffer for imageIndex=1, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=2
LOG: Submitted CmdBuffer for imageIndex=2, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=0
LOG: Submitted CmdBuffer for imageIndex=0, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=1
LOG: Submitted CmdBuffer for imageIndex=1, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=2
LOG: Submitted CmdBuffer for imageIndex=2, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=0
LOG: Submitted CmdBuffer for imageIndex=0, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=1
LOG: Submitted CmdBuffer for imageIndex=1, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=2
LOG: Submitted CmdBuffer for imageIndex=2, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=0
LOG: Submitted CmdBuffer for imageIndex=0, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=1
LOG: Submitted CmdBuffer for imageIndex=1, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=2
LOG: Submitted CmdBuffer for imageIndex=2, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=0
LOG: Submitted CmdBuffer for imageIndex=0, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=1
LOG: Submitted CmdBuffer for imageIndex=1, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=2
LOG: Submitted CmdBuffer for imageIndex=2, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=0
LOG: Submitted CmdBuffer for imageIndex=0, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=1
LOG: Submitted CmdBuffer for imageIndex=1, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=2
LOG: Submitted CmdBuffer for imageIndex=2, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=0
LOG: Submitted CmdBuffer for imageIndex=0, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=1
LOG: Submitted CmdBuffer for imageIndex=1, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=2
LOG: Submitted CmdBuffer for imageIndex=2, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=0
LOG: Submitted CmdBuffer for imageIndex=0, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=1
LOG: Submitted CmdBuffer for imageIndex=1, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=2
LOG: Submitted CmdBuffer for imageIndex=2, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=0
LOG: Submitted CmdBuffer for imageIndex=0, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=1
LOG: Submitted CmdBuffer for imageIndex=1, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=2
LOG: Submitted CmdBuffer for imageIndex=2, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=0
LOG: Submitted CmdBuffer for imageIndex=0, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=1
LOG: Submitted CmdBuffer for imageIndex=1, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=2
LOG: Submitted CmdBuffer for imageIndex=2, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=0
LOG: Submitted CmdBuffer for imageIndex=0, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=1
LOG: Submitted CmdBuffer for imageIndex=1, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=2
LOG: Submitted CmdBuffer for imageIndex=2, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=0
LOG: Submitted CmdBuffer for imageIndex=0, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=1
LOG: Submitted CmdBuffer for imageIndex=1, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=2
LOG: Submitted CmdBuffer for imageIndex=2, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=0
LOG: Submitted CmdBuffer for imageIndex=0, signaled fence/inFlightFences[1]
LOG: vkQueuePresentKHR => result=0
LOG: vkAcquireNextImageKHR => result=0, imgIndex=1
LOG: Submitted CmdBuffer for imageIndex=1, signaled fence/inFlightFences[0]
LOG: vkQueuePresentKHR => result=0
LOG: WM_CLOSE received, destroying window.
LOG: Window lost focus.
LOG: WM_DESTROY received, PostQuitMessage.
LOG: uninitialize() Start
LOG: Destroyed fence[0]
LOG: Destroyed renderFinished semaphore[0]
LOG: Destroyed imageAvailable semaphore[0]
LOG: Destroyed fence[1]
LOG: Destroyed renderFinished semaphore[1]
LOG: Destroyed imageAvailable semaphore[1]
LOG: cleanupSwapchain() Start
LOG: Freed CommandBuffer[0]
LOG: Freed CommandBuffer[1]
LOG: Freed CommandBuffer[2]
LOG: Destroyed Command Pool
LOG: Destroyed ImageView[0]
LOG: Destroyed ImageView[1]
LOG: Destroyed ImageView[2]
LOG: Destroyed Swapchain
LOG: cleanupSwapchain() End
LOG: Destroyed logical device
LOG: Destroyed debug messenger
LOG: Destroyed surface
LOG: Destroyed Vulkan instance
LOG: Destroyed main window
Program ended.
